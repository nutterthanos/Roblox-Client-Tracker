#version 110

struct Globals
{
    mat4 ViewProjection;
    vec4 ViewRight;
    vec4 ViewUp;
    vec4 ViewDir;
    vec3 CameraPosition;
    vec3 AmbientColor;
    vec3 SkyAmbient;
    vec3 Lamp0Color;
    vec3 Lamp0Dir;
    vec3 Lamp1Color;
    vec4 FogParams;
    vec4 FogColor_GlobalForceFieldTime;
    vec3 Exposure;
    vec4 LightConfig0;
    vec4 LightConfig1;
    vec4 LightConfig2;
    vec4 LightConfig3;
    vec4 ShadowMatrix0;
    vec4 ShadowMatrix1;
    vec4 ShadowMatrix2;
    vec4 RefractionBias_FadeDistance_GlowFactor_SpecMul;
    vec4 OutlineBrightness_ShadowInfo;
    vec4 SkyGradientTop_EnvDiffuse;
    vec4 SkyGradientBottom_EnvSpec;
    vec3 AmbientColorNoIBL;
    vec3 SkyAmbientNoIBL;
    vec4 AmbientCube[12];
    vec4 CascadeSphere0;
    vec4 CascadeSphere1;
    vec4 CascadeSphere2;
    vec4 CascadeSphere3;
    float hybridLerpDist;
    float hybridLerpSlope;
    float evsmPosExp;
    float evsmNegExp;
    float globalShadow;
    float shadowBias;
    float shadowAlphaRef;
    float debugFlags;
};

uniform vec4 CB0[47];
uniform vec4 CB1[216];
attribute vec4 POSITION;
attribute vec4 NORMAL;
attribute vec2 TEXCOORD0;
attribute vec2 TEXCOORD1;
attribute vec4 COLOR0;
attribute vec4 COLOR1;
attribute vec4 TEXCOORD4;
attribute vec4 TEXCOORD5;
attribute vec4 TEXCOORD2;
attribute vec4 TEXCOORD3;
varying vec4 VARYING0;
varying vec4 VARYING1;
varying vec4 VARYING2;
varying vec3 VARYING3;
varying vec4 VARYING4;
varying vec4 VARYING5;
varying vec4 VARYING6;
varying vec4 VARYING7;
varying float VARYING8;

void main()
{
    vec3 v0 = (NORMAL.xyz * 0.0078740157186985015869140625) - vec3(1.0);
    vec3 v1 = (TEXCOORD2.xyz * 0.0078740157186985015869140625) - vec3(1.0);
    vec4 v2 = TEXCOORD5 * vec4(0.0039215688593685626983642578125);
    int v3 = int(TEXCOORD4.x) * 3;
    float v4 = v2.x;
    int v5 = int(TEXCOORD4.y) * 3;
    float v6 = v2.y;
    int v7 = int(TEXCOORD4.z) * 3;
    float v8 = v2.z;
    int v9 = int(TEXCOORD4.w) * 3;
    float v10 = v2.w;
    vec4 v11 = (((CB1[v3 * 1 + 0] * v4) + (CB1[v5 * 1 + 0] * v6)) + (CB1[v7 * 1 + 0] * v8)) + (CB1[v9 * 1 + 0] * v10);
    vec4 v12 = (((CB1[(v3 + 1) * 1 + 0] * v4) + (CB1[(v5 + 1) * 1 + 0] * v6)) + (CB1[(v7 + 1) * 1 + 0] * v8)) + (CB1[(v9 + 1) * 1 + 0] * v10);
    vec4 v13 = (((CB1[(v3 + 2) * 1 + 0] * v4) + (CB1[(v5 + 2) * 1 + 0] * v6)) + (CB1[(v7 + 2) * 1 + 0] * v8)) + (CB1[(v9 + 2) * 1 + 0] * v10);
    float v14 = dot(v11, POSITION);
    float v15 = dot(v12, POSITION);
    float v16 = dot(v13, POSITION);
    vec3 v17 = vec3(v14, v15, v16);
    vec3 v18 = v11.xyz;
    float v19 = dot(v18, v0);
    vec3 v20 = v12.xyz;
    float v21 = dot(v20, v0);
    vec3 v22 = v13.xyz;
    float v23 = dot(v22, v0);
    vec3 v24 = vec3(dot(v18, v1), dot(v20, v1), dot(v22, v1));
    vec4 v25 = vec4(0.0);
    v25.w = (TEXCOORD2.w * 0.0078740157186985015869140625) - 1.0;
    vec4 v26 = vec4(v14, v15, v16, 1.0);
    vec4 v27 = v26 * mat4(CB0[0], CB0[1], CB0[2], CB0[3]);
    float v28 = v27.w;
    vec4 v29 = ((exp2(TEXCOORD3 * 0.0625) - vec4(1.0)) * CB0[23].z) + vec4((0.5 * v28) * CB0[23].y);
    vec4 v30 = vec4(dot(CB0[20], v26), dot(CB0[21], v26), dot(CB0[22], v26), 0.0);
    v30.w = COLOR1.w * 0.0039215688593685626983642578125;
    vec4 v31 = vec4(v19, v21, v23, 0.0);
    v31.w = 0.0;
    gl_Position = v27;
    VARYING0 = vec4(TEXCOORD0.x, TEXCOORD0.y, v29.x, v29.y);
    VARYING1 = vec4(TEXCOORD1.x, TEXCOORD1.y, v29.z, v29.w);
    VARYING2 = COLOR0;
    VARYING3 = ((v17 + (vec3(v19, v21, v23) * 6.0)).yxz * CB0[16].xyz) + CB0[17].xyz;
    VARYING4 = vec4(CB0[7].xyz - v17, v28);
    VARYING5 = v31;
    VARYING6 = vec4(v24.x, v24.y, v24.z, v25.w);
    VARYING7 = v30;
    VARYING8 = NORMAL.w;
}

